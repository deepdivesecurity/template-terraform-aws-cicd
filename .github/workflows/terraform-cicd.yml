name: Terraform CI/CD with Pre-Commit

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - '**'

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v4

      # Install the latest version of Python
      - name: Setup Python
        uses: actions/setup-python@v5

      # Install the latest version of Terraform CLI
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      # Install the latest version of tflint
      - name: Setup tflint
        uses: terraform-linters/setup-tflint@v4

      # Run the pre-commit hooks
      - name: Run pre-commit hooks
        uses: pre-commit/action@v3.0.1

  terraform:
    runs-on: ubuntu-latest
    needs: pre-commit

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v4

      # Install the latest version of Terraform CLI
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      # Configure OIDC
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Generate backend.hcl for Terraform init
      - name: Write backend config
        run: |
          cat > backend.hcl <<EOF
          bucket         = "${{ secrets.TF_BACKEND_BUCKET }}"
          key            = "${{ secrets.TF_BACKEND_KEY }}"
          region         = "${{ secrets.AWS_REGION }}"
          encrypt        = true
          use_lockfile   = true
          EOF

      # Initialize Terraform
      - name: Terraform Init
        run: terraform init -backend-config=backend.hcl

      # Format Terraform
      - name: Terraform Format
        run: terraform fmt -check

      # Validate Terraform
      - name: Terraform Validate
        run: terraform validate

      # Terraform plan
      - name: Terraform Plan
        if: github.event_name == 'pull_request'
        id: plan
        run: terraform plan -no-color | tee plan.txt

      # Comment Terraform plan to PR
      - name: Post Plan to PR
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          path: plan.txt

      # Apply Terraform changes if all else passes and the branch is main
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve